<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.xiaobais.xiaobai.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="net.xiaobais.xiaobai.model.User">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="create_date" jdbcType="DATE" property="createDate" />
    <result column="last_login_time" jdbcType="DATE" property="lastLoginTime" />
    <result column="enabled" jdbcType="BIT" property="enabled" />
    <result column="account_non_expired" jdbcType="BIT" property="accountNonExpired" />
    <result column="credentials_non_expired" jdbcType="BIT" property="credentialsNonExpired" />
    <result column="user_phone" jdbcType="VARCHAR" property="userPhone" />
    <result column="user_email" jdbcType="VARCHAR" property="userEmail" />
    <result column="user_avatar" jdbcType="VARCHAR" property="userAvatar" />
    <result column="user_desc" jdbcType="VARCHAR" property="userDesc" />
    <result column="index_id" jdbcType="INTEGER" property="indexId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, username, password, create_date, last_login_time, enabled, account_non_expired, 
    credentials_non_expired, user_phone, user_email, user_avatar, user_desc, index_id
  </sql>
  <select id="selectByExample" parameterType="net.xiaobais.xiaobai.model.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="net.xiaobais.xiaobai.model.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="net.xiaobais.xiaobai.model.User">
    <selectKey keyProperty="userId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user (username, password, create_date, 
      last_login_time, enabled, account_non_expired, 
      credentials_non_expired, user_phone, user_email, 
      user_avatar, user_desc, index_id
      )
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{createDate,jdbcType=DATE}, 
      #{lastLoginTime,jdbcType=DATE}, #{enabled,jdbcType=BIT}, #{accountNonExpired,jdbcType=BIT}, 
      #{credentialsNonExpired,jdbcType=BIT}, #{userPhone,jdbcType=VARCHAR}, #{userEmail,jdbcType=VARCHAR}, 
      #{userAvatar,jdbcType=VARCHAR}, #{userDesc,jdbcType=VARCHAR}, #{indexId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="net.xiaobais.xiaobai.model.User">
    <selectKey keyProperty="userId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="lastLoginTime != null">
        last_login_time,
      </if>
      <if test="enabled != null">
        enabled,
      </if>
      <if test="accountNonExpired != null">
        account_non_expired,
      </if>
      <if test="credentialsNonExpired != null">
        credentials_non_expired,
      </if>
      <if test="userPhone != null">
        user_phone,
      </if>
      <if test="userEmail != null">
        user_email,
      </if>
      <if test="userAvatar != null">
        user_avatar,
      </if>
      <if test="userDesc != null">
        user_desc,
      </if>
      <if test="indexId != null">
        index_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=DATE},
      </if>
      <if test="lastLoginTime != null">
        #{lastLoginTime,jdbcType=DATE},
      </if>
      <if test="enabled != null">
        #{enabled,jdbcType=BIT},
      </if>
      <if test="accountNonExpired != null">
        #{accountNonExpired,jdbcType=BIT},
      </if>
      <if test="credentialsNonExpired != null">
        #{credentialsNonExpired,jdbcType=BIT},
      </if>
      <if test="userPhone != null">
        #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="userAvatar != null">
        #{userAvatar,jdbcType=VARCHAR},
      </if>
      <if test="userDesc != null">
        #{userDesc,jdbcType=VARCHAR},
      </if>
      <if test="indexId != null">
        #{indexId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="net.xiaobais.xiaobai.model.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=DATE},
      </if>
      <if test="record.lastLoginTime != null">
        last_login_time = #{record.lastLoginTime,jdbcType=DATE},
      </if>
      <if test="record.enabled != null">
        enabled = #{record.enabled,jdbcType=BIT},
      </if>
      <if test="record.accountNonExpired != null">
        account_non_expired = #{record.accountNonExpired,jdbcType=BIT},
      </if>
      <if test="record.credentialsNonExpired != null">
        credentials_non_expired = #{record.credentialsNonExpired,jdbcType=BIT},
      </if>
      <if test="record.userPhone != null">
        user_phone = #{record.userPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.userEmail != null">
        user_email = #{record.userEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.userAvatar != null">
        user_avatar = #{record.userAvatar,jdbcType=VARCHAR},
      </if>
      <if test="record.userDesc != null">
        user_desc = #{record.userDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.indexId != null">
        index_id = #{record.indexId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set user_id = #{record.userId,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=DATE},
      last_login_time = #{record.lastLoginTime,jdbcType=DATE},
      enabled = #{record.enabled,jdbcType=BIT},
      account_non_expired = #{record.accountNonExpired,jdbcType=BIT},
      credentials_non_expired = #{record.credentialsNonExpired,jdbcType=BIT},
      user_phone = #{record.userPhone,jdbcType=VARCHAR},
      user_email = #{record.userEmail,jdbcType=VARCHAR},
      user_avatar = #{record.userAvatar,jdbcType=VARCHAR},
      user_desc = #{record.userDesc,jdbcType=VARCHAR},
      index_id = #{record.indexId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="net.xiaobais.xiaobai.model.User">
    update user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=DATE},
      </if>
      <if test="lastLoginTime != null">
        last_login_time = #{lastLoginTime,jdbcType=DATE},
      </if>
      <if test="enabled != null">
        enabled = #{enabled,jdbcType=BIT},
      </if>
      <if test="accountNonExpired != null">
        account_non_expired = #{accountNonExpired,jdbcType=BIT},
      </if>
      <if test="credentialsNonExpired != null">
        credentials_non_expired = #{credentialsNonExpired,jdbcType=BIT},
      </if>
      <if test="userPhone != null">
        user_phone = #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        user_email = #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="userAvatar != null">
        user_avatar = #{userAvatar,jdbcType=VARCHAR},
      </if>
      <if test="userDesc != null">
        user_desc = #{userDesc,jdbcType=VARCHAR},
      </if>
      <if test="indexId != null">
        index_id = #{indexId,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="net.xiaobais.xiaobai.model.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=DATE},
      last_login_time = #{lastLoginTime,jdbcType=DATE},
      enabled = #{enabled,jdbcType=BIT},
      account_non_expired = #{accountNonExpired,jdbcType=BIT},
      credentials_non_expired = #{credentialsNonExpired,jdbcType=BIT},
      user_phone = #{userPhone,jdbcType=VARCHAR},
      user_email = #{userEmail,jdbcType=VARCHAR},
      user_avatar = #{userAvatar,jdbcType=VARCHAR},
      user_desc = #{userDesc,jdbcType=VARCHAR},
      index_id = #{indexId,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>