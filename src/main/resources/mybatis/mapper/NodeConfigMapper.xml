<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.xiaobais.xiaobai.mapper.NodeConfigMapper">
  <resultMap id="BaseResultMap" type="net.xiaobais.xiaobai.model.NodeConfig">
    <id column="config_id" jdbcType="INTEGER" property="configId" />
    <result column="node_level" jdbcType="INTEGER" property="nodeLevel" />
    <result column="node_type" jdbcType="BIT" property="nodeType" />
    <result column="is_suggest" jdbcType="BIT" property="isSuggest" />
    <result column="is_comment" jdbcType="BIT" property="isComment" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    config_id, node_level, node_type, is_suggest, is_comment
  </sql>
  <select id="selectByExample" parameterType="net.xiaobais.xiaobai.model.NodeConfigExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from node_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from node_config
    where config_id = #{configId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from node_config
    where config_id = #{configId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="net.xiaobais.xiaobai.model.NodeConfigExample">
    delete from node_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="net.xiaobais.xiaobai.model.NodeConfig">
    insert into node_config (config_id, node_level, node_type, 
      is_suggest, is_comment)
    values (#{configId,jdbcType=INTEGER}, #{nodeLevel,jdbcType=INTEGER}, #{nodeType,jdbcType=BIT}, 
      #{isSuggest,jdbcType=BIT}, #{isComment,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="net.xiaobais.xiaobai.model.NodeConfig">
    insert into node_config
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="configId != null">
        config_id,
      </if>
      <if test="nodeLevel != null">
        node_level,
      </if>
      <if test="nodeType != null">
        node_type,
      </if>
      <if test="isSuggest != null">
        is_suggest,
      </if>
      <if test="isComment != null">
        is_comment,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="configId != null">
        #{configId,jdbcType=INTEGER},
      </if>
      <if test="nodeLevel != null">
        #{nodeLevel,jdbcType=INTEGER},
      </if>
      <if test="nodeType != null">
        #{nodeType,jdbcType=BIT},
      </if>
      <if test="isSuggest != null">
        #{isSuggest,jdbcType=BIT},
      </if>
      <if test="isComment != null">
        #{isComment,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="net.xiaobais.xiaobai.model.NodeConfigExample" resultType="java.lang.Long">
    select count(*) from node_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update node_config
    <set>
      <if test="record.configId != null">
        config_id = #{record.configId,jdbcType=INTEGER},
      </if>
      <if test="record.nodeLevel != null">
        node_level = #{record.nodeLevel,jdbcType=INTEGER},
      </if>
      <if test="record.nodeType != null">
        node_type = #{record.nodeType,jdbcType=BIT},
      </if>
      <if test="record.isSuggest != null">
        is_suggest = #{record.isSuggest,jdbcType=BIT},
      </if>
      <if test="record.isComment != null">
        is_comment = #{record.isComment,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update node_config
    set config_id = #{record.configId,jdbcType=INTEGER},
      node_level = #{record.nodeLevel,jdbcType=INTEGER},
      node_type = #{record.nodeType,jdbcType=BIT},
      is_suggest = #{record.isSuggest,jdbcType=BIT},
      is_comment = #{record.isComment,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="net.xiaobais.xiaobai.model.NodeConfig">
    update node_config
    <set>
      <if test="nodeLevel != null">
        node_level = #{nodeLevel,jdbcType=INTEGER},
      </if>
      <if test="nodeType != null">
        node_type = #{nodeType,jdbcType=BIT},
      </if>
      <if test="isSuggest != null">
        is_suggest = #{isSuggest,jdbcType=BIT},
      </if>
      <if test="isComment != null">
        is_comment = #{isComment,jdbcType=BIT},
      </if>
    </set>
    where config_id = #{configId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="net.xiaobais.xiaobai.model.NodeConfig">
    update node_config
    set node_level = #{nodeLevel,jdbcType=INTEGER},
      node_type = #{nodeType,jdbcType=BIT},
      is_suggest = #{isSuggest,jdbcType=BIT},
      is_comment = #{isComment,jdbcType=BIT}
    where config_id = #{configId,jdbcType=INTEGER}
  </update>
</mapper>